plugins {
	id 'com.android.library'
	id 'maven-publish'
}

android {
    compileSdk = 36
    resourcePrefix = "materialcolorpicker__"

    defaultConfig {
	    minSdk = 23
        targetSdk = 36
    }

	buildTypes {
		release {
			minifyEnabled = true
			shrinkResources = false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}

		debug {
			minifyEnabled = false
			shrinkResources = false
		}
	}
    namespace = 'com.github.evilbunny2008.androidmaterialcolorpickerdialog'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.7.1'
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url = 'https://maven.google.com' }
        maven { url = 'https://jitpack.io' }
    }
}

publishing {
    publications {
        customLibrary(MavenPublication) {
            groupId = 'com.github.evilbunny2008'
            artifactId = 'android-material-color-picker-dialog'
            version = '1.3.8'

//            from components.java

            pom {
                name = 'Color Picker Library'
                description = 'Color Picker library'
                url = 'https://github.com/evilbunny2008/android-material-color-picker-dialog/'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/evilbunny2008/android-material-color-picker-dialog/blob/master/LICENSE'
                    }
                }
            }

            pom.withXml {
                asNode()
                        .dependencies
                        .dependency
                        .findAll { dependency ->
                            // find all dependencies with runtime scope
                            dependency.scope.text() == 'runtime'
                        }
                        .each { dependency ->
                            // set the scope to 'compile'
                            dependency.scope*.value = 'compile'
                        }
            }
        }
    }
}